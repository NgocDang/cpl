//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BAccountService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BAccountSetting", Namespace="http://schemas.datacontract.org/2004/07/FHCore.WCF.Account")]
    public partial class BAccountSetting : object
    {
        
        private BAccountService.Environment EnvironmentField;
        
        private BAccountService.Platform PlatformField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BAccountService.Environment Environment
        {
            get
            {
                return this.EnvironmentField;
            }
            set
            {
                this.EnvironmentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BAccountService.Platform Platform
        {
            get
            {
                return this.PlatformField;
            }
            set
            {
                this.PlatformField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Environment", Namespace="http://schemas.datacontract.org/2004/07/FHCore.API.Core")]
    public enum Environment : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PRIVATENET = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MAINNET = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TESTNET = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Platform", Namespace="http://schemas.datacontract.org/2004/07/FHCore.API.Core")]
    public enum Platform : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTC = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NEO = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ETH = 0,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BAccountSetResult", Namespace="http://schemas.datacontract.org/2004/07/FHCore.WCF.Account")]
    public partial class BAccountSetResult : object
    {
        
        private BAccountService.Status StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BAccountService.Status Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/FHCore.WCF.Misc")]
    public partial class Status : object
    {
        
        private int CodeField;
        
        private string TextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code
        {
            get
            {
                return this.CodeField;
            }
            set
            {
                this.CodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BAccountTransferResult", Namespace="http://schemas.datacontract.org/2004/07/FHCore.WCF.Account")]
    public partial class BAccountTransferResult : object
    {
        
        private BAccountService.Status StatusField;
        
        private string TxIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BAccountService.Status Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TxId
        {
            get
            {
                return this.TxIdField;
            }
            set
            {
                this.TxIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BAccountBalanceResult", Namespace="http://schemas.datacontract.org/2004/07/FHCore.WCF.Account")]
    public partial class BAccountBalanceResult : object
    {
        
        private decimal BalanceField;
        
        private BAccountService.Status StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Balance
        {
            get
            {
                return this.BalanceField;
            }
            set
            {
                this.BalanceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BAccountService.Status Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BAccountTransferByMnemonicResult", Namespace="http://schemas.datacontract.org/2004/07/FHCore.WCF.Account")]
    public partial class BAccountTransferByMnemonicResult : object
    {
        
        private BAccountService.Status StatusField;
        
        private string[] TxIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BAccountService.Status Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] TxId
        {
            get
            {
                return this.TxIdField;
            }
            set
            {
                this.TxIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BAccountService.IBAccount")]
    public interface IBAccount
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBAccount/Set", ReplyAction="http://tempuri.org/IBAccount/SetResponse")]
        System.Threading.Tasks.Task<BAccountService.BAccountSetResult> SetAsync(string authenticatedToken, BAccountService.BAccountSetting setting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBAccount/Transfer", ReplyAction="http://tempuri.org/IBAccount/TransferResponse")]
        System.Threading.Tasks.Task<BAccountService.BAccountTransferResult> TransferAsync(string authenticatedToken, string fromPrivateKey, string toAddress, decimal value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBAccount/GetBalance", ReplyAction="http://tempuri.org/IBAccount/GetBalanceResponse")]
        System.Threading.Tasks.Task<BAccountService.BAccountBalanceResult> GetBalanceAsync(string authenticatedToken, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBAccount/GetBalanceWithConfirmationNumber", ReplyAction="http://tempuri.org/IBAccount/GetBalanceWithConfirmationNumberResponse")]
        System.Threading.Tasks.Task<BAccountService.BAccountBalanceResult> GetBalanceWithConfirmationNumberAsync(string authenticatedToken, string address, int confirmationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBAccount/TransferByMnemonic", ReplyAction="http://tempuri.org/IBAccount/TransferByMnemonicResponse")]
        System.Threading.Tasks.Task<BAccountService.BAccountTransferByMnemonicResult> TransferByMnemonicAsync(string authenticatedToken, string fromMnemonic, string listIndexs, string toAddress, int durationInSeconds);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface IBAccountChannel : BAccountService.IBAccount, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class BAccountClient : System.ServiceModel.ClientBase<BAccountService.IBAccount>, BAccountService.IBAccount
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public BAccountClient() : 
                base(BAccountClient.GetDefaultBinding(), BAccountClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IBAccount.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BAccountClient(EndpointConfiguration endpointConfiguration) : 
                base(BAccountClient.GetBindingForEndpoint(endpointConfiguration), BAccountClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BAccountClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(BAccountClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BAccountClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(BAccountClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BAccountClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<BAccountService.BAccountSetResult> SetAsync(string authenticatedToken, BAccountService.BAccountSetting setting)
        {
            return base.Channel.SetAsync(authenticatedToken, setting);
        }
        
        public System.Threading.Tasks.Task<BAccountService.BAccountTransferResult> TransferAsync(string authenticatedToken, string fromPrivateKey, string toAddress, decimal value)
        {
            return base.Channel.TransferAsync(authenticatedToken, fromPrivateKey, toAddress, value);
        }
        
        public System.Threading.Tasks.Task<BAccountService.BAccountBalanceResult> GetBalanceAsync(string authenticatedToken, string address)
        {
            return base.Channel.GetBalanceAsync(authenticatedToken, address);
        }
        
        public System.Threading.Tasks.Task<BAccountService.BAccountBalanceResult> GetBalanceWithConfirmationNumberAsync(string authenticatedToken, string address, int confirmationNumber)
        {
            return base.Channel.GetBalanceWithConfirmationNumberAsync(authenticatedToken, address, confirmationNumber);
        }
        
        public System.Threading.Tasks.Task<BAccountService.BAccountTransferByMnemonicResult> TransferByMnemonicAsync(string authenticatedToken, string fromMnemonic, string listIndexs, string toAddress, int durationInSeconds)
        {
            return base.Channel.TransferByMnemonicAsync(authenticatedToken, fromMnemonic, listIndexs, toAddress, durationInSeconds);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IBAccount))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IBAccount))
            {
                return new System.ServiceModel.EndpointAddress("http://api.famhopperchain.com/Account/BAccount.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return BAccountClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IBAccount);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return BAccountClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IBAccount);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IBAccount,
        }
    }
}
