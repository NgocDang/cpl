//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BBlockService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BBlockSetting", Namespace="http://schemas.datacontract.org/2004/07/FHCore.WCF.Block")]
    public partial class BBlockSetting : object
    {
        
        private BBlockService.Environment EnvironmentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BBlockService.Environment Environment
        {
            get
            {
                return this.EnvironmentField;
            }
            set
            {
                this.EnvironmentField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Environment", Namespace="http://schemas.datacontract.org/2004/07/FHCore.API.Core")]
    public enum Environment : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PRIVATENET = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MAINNET = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TESTNET = 0,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BBlockSetResult", Namespace="http://schemas.datacontract.org/2004/07/FHCore.WCF.Block")]
    public partial class BBlockSetResult : object
    {
        
        private BBlockService.Status StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BBlockService.Status Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/FHCore.WCF.Misc")]
    public partial class Status : object
    {
        
        private int CodeField;
        
        private string TextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code
        {
            get
            {
                return this.CodeField;
            }
            set
            {
                this.CodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BBlockRetrieveBlockTransactionResult", Namespace="http://schemas.datacontract.org/2004/07/FHCore.WCF.Block")]
    public partial class BBlockRetrieveBlockTransactionResult : object
    {
        
        private BBlockService.Status StatusField;
        
        private BBlockService.BBlockTransaction[] TransactionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BBlockService.Status Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BBlockService.BBlockTransaction[] Transactions
        {
            get
            {
                return this.TransactionsField;
            }
            set
            {
                this.TransactionsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BBlockTransaction", Namespace="http://schemas.datacontract.org/2004/07/FHCore.API.BTC")]
    public partial class BBlockTransaction : object
    {
        
        private int BlockNumberField;
        
        private BBlockService.BBlockTransactionVOut[] ToField;
        
        private string TxHashIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BlockNumber
        {
            get
            {
                return this.BlockNumberField;
            }
            set
            {
                this.BlockNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BBlockService.BBlockTransactionVOut[] To
        {
            get
            {
                return this.ToField;
            }
            set
            {
                this.ToField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TxHashId
        {
            get
            {
                return this.TxHashIdField;
            }
            set
            {
                this.TxHashIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BBlockTransactionVOut", Namespace="http://schemas.datacontract.org/2004/07/FHCore.API.BTC")]
    public partial class BBlockTransactionVOut : object
    {
        
        private string AddressField;
        
        private decimal ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                this.AddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BBlockService.IBBlock")]
    public interface IBBlock
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBBlock/Set", ReplyAction="http://tempuri.org/IBBlock/SetResponse")]
        System.Threading.Tasks.Task<BBlockService.BBlockSetResult> SetAsync(string authenticatedToken, BBlockService.BBlockSetting setting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBBlock/RetrieveBlockTransaction", ReplyAction="http://tempuri.org/IBBlock/RetrieveBlockTransactionResponse")]
        System.Threading.Tasks.Task<BBlockService.BBlockRetrieveBlockTransactionResult> RetrieveBlockTransactionAsync(string authenticatedToken, int startBlockNumber, int endBlockNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface IBBlockChannel : BBlockService.IBBlock, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class BBlockClient : System.ServiceModel.ClientBase<BBlockService.IBBlock>, BBlockService.IBBlock
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public BBlockClient() : 
                base(BBlockClient.GetDefaultBinding(), BBlockClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IBBlock.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BBlockClient(EndpointConfiguration endpointConfiguration) : 
                base(BBlockClient.GetBindingForEndpoint(endpointConfiguration), BBlockClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BBlockClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(BBlockClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BBlockClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(BBlockClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BBlockClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<BBlockService.BBlockSetResult> SetAsync(string authenticatedToken, BBlockService.BBlockSetting setting)
        {
            return base.Channel.SetAsync(authenticatedToken, setting);
        }
        
        public System.Threading.Tasks.Task<BBlockService.BBlockRetrieveBlockTransactionResult> RetrieveBlockTransactionAsync(string authenticatedToken, int startBlockNumber, int endBlockNumber)
        {
            return base.Channel.RetrieveBlockTransactionAsync(authenticatedToken, startBlockNumber, endBlockNumber);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IBBlock))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IBBlock))
            {
                return new System.ServiceModel.EndpointAddress("http://api.famhopperchain.com/Block/BBlock.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return BBlockClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IBBlock);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return BBlockClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IBBlock);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IBBlock,
        }
    }
}
